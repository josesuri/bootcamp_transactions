openapi: 3.0.1
info:
  title: OpenAPI transactions
  version: v0
servers:
  - url: http://localhost:8086/
    description: Generated server url
paths:
  /transaction:
    get:
      tags:
        - transactions-controller
      operationId: getAll
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
    put:
      tags:
        - transactions-controller
      operationId: updateTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Transaction'
    post:
      tags:
        - transactions-controller
      operationId: createTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequestDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Transaction'
  /transaction/{transactionId}:
    get:
      tags:
        - transactions-controller
      operationId: getTransactionById
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Transaction'
    delete:
      tags:
        - transactions-controller
      operationId: deleteTransaction
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
  /transaction/product/{productId}:
    get:
      tags:
        - transactions-controller
      operationId: getAllXProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
  /transaction/customer/{customerId}:
    get:
      tags:
        - transactions-controller
      operationId: getTransactionByCustomerId
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
components:
  schemas:
    TransactionRequestDto:
      required:
        - amount
        - customerId
        - productId
        - productType
        - transactionDate
        - transactionType
      type: object
      properties:
        id:
          type: string
        productType:
          type: string
        productId:
          type: string
        customerId:
          type: string
        transactionType:
          type: string
        amount:
          type: number
          format: double
        transactionDate:
          type: string
          format: date-time
        customerType:
          type: string
        balance:
          type: number
          format: double
    Transaction:
      required:
        - amount
        - customerId
        - customerType
        - productId
        - productType
        - transactionDate
        - transactionType
      type: object
      properties:
        id:
          type: string
        productType:
          type: string
        productId:
          type: string
        customerId:
          type: string
        transactionType:
          type: string
        amount:
          type: number
          format: double
        transactionDate:
          type: string
          format: date-time
        customerType:
          type: string
        balance:
          type: number
          format: double
    Message:
      type: object
      properties:
        message:
          type: string
